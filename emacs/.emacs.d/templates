svelte-mode

;; tags
(script "<script lang='ts'>" n> q n "</script>")
;; runes
(state "let " p " = $state(" p ")")
(derived "let " p " = $derived(" p ")")
(effect "$effect(() => {" n> p n> " })" >)
(props "type Props = {" n>
       p n
       "}" > n>
       "let { " p " }: Props = $props()")
(bindable p " = $bindable()" q)
;; binds
(bv "bind:value={" q "}")

typescript-mode svelte-mode

(log "console.log(" p ")")
(fun "function " p "(" p ") {" n> q n "}" >)
(loadfn "import type { PageServerLoad } from './$types'" n
        "export const load: PageServerLoad = async ({ " p " }) => {" n>
        p n
        "}")

;; Local Variables:
;; mode: lisp-data
;; outline-regexp: "[a-z]"
;; End:
